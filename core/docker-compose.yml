services:
  # API Gateway
  gateway:
    container_name: gateway
    image: gateway
    build:
      context: ./src/back/gateway
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    ports:
      - "3000:3000"
    env_file: .env
    environment:
      - AUTH_SERVICE_URL=http://auth-service:3001
      - GAME_SERVICE_URL=http://game-service:3002
      - TOURNAMENT_SERVICE_URL=http://tournament-service:3003
      - CHAT_SERVICE_URL=http://chat-service:3004
      - USER_SERVICE_URL=http://user-service:3005
    networks:
      - transcendence
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health", "--insecure"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Auth Service
  auth-service:
    container_name: auth-service
    image: auth-service
    build:
      context: ./src/back/service/auth-service
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    ports:
      - "3001:3001"
    env_file: .env
    volumes:
      - auth_data:/data
    networks:
      - transcendence
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health", "--insecure"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Game Service
  game-service:
    container_name: game-service
    image: game-service
    build:
      context: ./src/back/service/game-service
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    ports:
      - "3002:3002"
    env_file: .env
    volumes:
      - game_data:/data
    networks:
      - transcendence
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health", "--insecure"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Tournament Service
  tournament-service:
    container_name: tournament-service
    image: tournament-service
    build:
      context: ./src/back/service/tournament-service
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    ports:
      - "3003:3003"
    env_file: .env
    volumes:
      - tournament_data:/data
    networks:
      - transcendence
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health", "--insecure"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Chat Service
  chat-service:
    container_name: chat-service
    image: chat-service
    build:
      context: ./src/back/service/chat-service
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    ports:
      - "3004:3004"
    env_file: .env
    volumes:
      - chat_data:/data
    networks:
      - transcendence
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/health", "--insecure"]
      interval: 10s
      timeout: 5s
      retries: 3

  # User Service
  user-service:
    container_name: user-service
    image: user-service
    build:
      context: ./src/back/service/user-service
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    ports:
      - "3005:3005"
    env_file: .env
    volumes:
      - user_data:/data
    networks:
      - transcendence
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005/health", "--insecure"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Frontend Service
  front:
    container_name: front
    image: front
    build:
      context: ./src/front
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    depends_on:
      gateway:
        condition: service_healthy
    env_file: .env
    networks:
      - transcendence
    restart: unless-stopped

networks:
  transcendence:
    driver: bridge
    name: transcendence

volumes:
  auth_data:
  game_data:
  tournament_data:
  chat_data:
  user_data: