services:
  db:
    container_name: db
    image: alpine #check
    env_file: ../.env
    volumes:
      - db_vol:/usr/src/app/database
    networks:
      - back_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "ls", "/usr/src/app/database/app.db"]
      interval: 5s
      timeout: 1s
      retries: 20
      start_period: 5s

  back:
    container_name: back
    image: back
    build:
      context: ./back
      dockerfile: Dockerfile
    working_dir : /usr/src/app
    ports:
      - 3000:3000
    depends_on: 
      db:
         condition: service_healthy
    env_file: ../.env
    volumes: 
      - back_vol:/usr/src/app
      - db_vol:/usr/src/app/database
      - upload:/usr/src/app/upload
    networks:
      - back_network
      - front_network
    restart: unless-stopped 


  front:
    container_name: front
    image: front
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - 5173:5173
    depends_on:
      back:
        condition: service_started
    env_file: ../.env
    volumes: 
      - front_vol:/usr/src/app
      - upload:/usr/src/app/upload
    networks:
      - front_network
    restart: unless-stopped

networks:
  back_network:
  front_network:

volumes:
  db_vol: {}
  back_vol: {}
  front_vol: {}
  upload: {} 