services:
  # API Gateway
  gateway:
    container_name: gateway
    image: gateway
    build:
      context: ./core/src/back/gateway
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    ports:
      - "3000:3000"
    env_file: .env
    networks:
      - transcendence
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:3000/health", "--insecure"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Auth Service
  auth-service:
    container_name: auth-service
    image: auth-service
    build:
      context: ./core/src/back/service/auth
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    ports:
      - "3001:3001"
    env_file: .env
    volumes:
      - auth_data:/data
    networks:
      - transcendence
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 3


  # User Service
  user-service:
    container_name: user-service
    image: user-service
    build:
      context: ./core/src/back/service/user 
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    ports:
      - "3002:3002"
    env_file: .env
    volumes:
      - user_data:/data
    networks:
      - transcendence
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 10s
      timeout: 5s
      retries: 3

      
  # Game Service
  # game-service:
  #   container_name: game-service
  #   image: game-service
  #   build:
  #     context: ./src/back/service/game
  #     dockerfile: Dockerfile
  #   working_dir: /usr/src/app
  #   ports:
  #     - "3002:3002"
  #   env_file: .env
  #   volumes:
  #     - game_data:/data
  #   networks:
  #     - transcendence
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:3002/health", "--insecure"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3

  # # Tournament Service
  # tournament-service:
  #   container_name: tournament-service
  #   image: tournament-service
  #   build:
  #     context: ./src/back/service/tournament
  #     dockerfile: Dockerfile
  #   working_dir: /usr/src/app
  #   ports:
  #     - "3003:3003"
  #   env_file: .env
  #   volumes:
  #     - tournament_data:/data
  #   networks:
  #     - transcendence
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:3003/health", "--insecure"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3

  # # Chat Service
  # chat-service:
  #   container_name: chat-service
  #   image: chat-service
  #   build:
  #     context: ./src/back/service/chat
  #     dockerfile: Dockerfile
  #   working_dir: /usr/src/app
  #   ports:
  #     - "3004:3004"
  #   env_file: .env
  #   volumes:
  #     - chat_data:/data
  #   networks:
  #     - transcendence
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:3004/health", "--insecure"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3

  # Frontend Service
  front:
    container_name: front
    image: front
    build:
      context: ./core/src/front
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    depends_on:
      gateway:
        condition: service_healthy
    env_file: .env
    networks:
      - transcendence
    restart: unless-stopped

networks:
  transcendence:
    driver: bridge
    name: transcendence

volumes:
  auth_data:
  user_data:
  # game_data:
  # tournament_data:
  # chat_data: